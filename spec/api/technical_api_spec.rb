=begin
#Intrinio API

#Welcome to the Intrinio API! Through our Financial Data Marketplace, we offer a wide selection of financial data feed APIs sourced by our own proprietary processes as well as from many data vendors. For a complete API request / response reference please view the [Intrinio API documentation](https://docs.intrinio.com/documentation/api_v2). If you need additional help in using the API, please visit the [Intrinio website](https://intrinio.com) and click on the chat icon in the lower right corner.

OpenAPI spec version: 2.47.7

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for Intrinio::TechnicalApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TechnicalApi' do
  before do
    # run before each test
    @instance = Intrinio::TechnicalApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TechnicalApi' do
    it 'should create an instance of TechnicalApi' do
      expect(@instance).to be_instance_of(Intrinio::TechnicalApi)
    end
  end

  # unit tests for get_security_price_technicals_adi
  # Accumulation/Distribution Index
  # The Accumulation / Distribution Indicator is a volume-based technical indicator which uses the relationship between the stock&#x60;s price and volume flow to determine the underlying trend of a stock, up, down, or sideways trend of a stock.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityAccumulationDistributionIndex]
  describe 'get_security_price_technicals_adi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_adtv
  # Average Daily Trading Volume
  # Average Daily Trading Volume is the average number of shares traded over a given period, usually between 20 to 30 trading days.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Average Daily Trading Volume
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityAverageDailyTradingVolume]
  describe 'get_security_price_technicals_adtv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_adx
  # Average Directional Index
  # The Average Directional Index indicator is often used to identify decreasing or increasing price momentum for an underlying security, it is composed of a total of three indicators, the current trendline (adx), a positive directional indicator (di_pos), and a negative directional indicator (di_neg).
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Average Directional Index
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityAverageDirectionalIndex]
  describe 'get_security_price_technicals_adx test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_ao
  # Awesome Oscillator
  # The Awesome Oscillator (ao) is a momentum indicator and is calculated by taking the difference between the latest 5 period simple moving average and the 34 period simple moving average. Rather than using the closing price like other indicators, the Awesome Oscillator uses the latest period&#x60;s midpoint value (period_high - period_low / 2). The Awesome Oscillator is useful in identifying and trading, zero-line crossovers, twin-peaks trading, and bullish/bearish saucers - Awesome Oscillator is often aggregated with additional technical indicators.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :short_period The number of observations, per period, to calculate short period Simple Moving Average of the Awesome Oscillator
  # @option opts [Integer] :long_period The number of observations, per period, to calculate long period Simple Moving Average of the Awesome Oscillator
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityAwesomeOscillator]
  describe 'get_security_price_technicals_ao test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_atr
  # Average True Range
  # The Average True Range (ATR) is a non-directional market volatility indicator often used to generate stop-out or entry indications. An increasing or expanding ATR typically indicates higher volatility, and a decreasing ATR indicates sideways price action and lower volatility.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Average True Range
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityAverageTrueRange]
  describe 'get_security_price_technicals_atr test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_bb
  # Bollinger Bands
  # Bollinger Bands can be a useful technical analysis tool for generating oversold or overbought indicators. Bollinger Bands are composed of three lines, a simple moving average (middle band) and an upper and lower band â€“ the upper and lower bands are typically 2 standard deviations +/- from a 20-day simple moving average, but can be modified. Traders typically consider an underlying security to be overbought as the underlying&#x60;s price moves towards the upper band and oversold as the underlying price moves towards the lower band.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Bollinger Bands
  # @option opts [Float] :standard_deviations The number of standard deviations to calculate the upper and lower bands of the Bollinger Bands
  # @option opts [String] :price_key The Stock Price field to use when calculating Bollinger Bands
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityBollingerBands]
  describe 'get_security_price_technicals_bb test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_cci
  # Commodity Channel Index
  # The Commodity Channel Index (CCI) is a technical indicator used to generate buy and sell signals by indicating periods of strength and weakness in the market. CCI signals that fall below -100 are often perceived as weakness in the underlying price movement and CCI signals that rise above 100 indicate strength behind the underlying price movement.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Commodity Channel Index
  # @option opts [Float] :constant The number of observations, per period, to calculate Commodity Channel Index
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityCommodityChannelIndex]
  describe 'get_security_price_technicals_cci test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_cmf
  # Chaikin Money Flow
  # The Chaikin Money Flow (CMF) utilizes exponential moving averages as an indicator to monitor the flow of money and momentum. The CMF indicator oscillates around a midrange 0-line and ranges between 100 and -100.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Chaikin Money Flow
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityChaikinMoneyFlow]
  describe 'get_security_price_technicals_cmf test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_dc
  # Donchian Channel
  # The Donchian Channel consists of an Upper Bound (upper_bound) and Lower Bound (lower_bound) that track the recent highs and lows and is often used to signal entry and exit points for a position. As the price of the underlying symbol increases the Upper Bound raises, if the price becomes range bound the Upper Bound will remain flat and if the price begins to decrease, the Upper Bound will fall (and vice-versa for the Lower Bound).
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Donchian Channel
  # @option opts [String] :price_key The Stock Price field to use when calculating Donchian Channel
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityDonchianChannel]
  describe 'get_security_price_technicals_dc test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_dpo
  # Detrended Price Oscillator
  # The Detrended Price Oscillator (DPO) signals the peaks and troughs of the underlying symbolâ€™s price for a set period of time and is often used by traders to estimate future peaks and troughs using this as guidance to enter or exit a position.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Detrended Price Oscillator
  # @option opts [String] :price_key The Stock Price field to use when calculating Detrended Price Oscillator
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityDetrendedPriceOscillator]
  describe 'get_security_price_technicals_dpo test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_eom
  # Ease of Movement
  # The Ease of Movement (EOM) is a volume based oscillator that fluctuates around a midrange 0-line into positive and negative values. Positive values indicate that the underlying symbol&#x60;s price is rising with relative ease and negative value indicates the underlying symbol&#x60;s price is failing with relative ease.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Ease of Movement
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityEaseOfMovement]
  describe 'get_security_price_technicals_eom test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_fi
  # Force Index
  # The Force Index (FI) is an oscillator that takes into account the intensity of an underlying symbol&#x60;s price movement and its corresponding volume. It is used to confirm price breakouts and signal underlying trends.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityForceIndex]
  describe 'get_security_price_technicals_fi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_ichimoku
  # Ichimoku Kinko Hyo
  # The Ichimoku Kinko Hyo was designed to be an all-in-one trading indicator that could help traders determine momentum, support, and resistance.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :low_period The number of observations, per period, to calculate Tenkan Sen (Conversion Line) of Ichimoku Kinko Hyo
  # @option opts [Integer] :medium_period The number of observations, per period, to calculate Kijun Sen (Base Line), Senkou Span A (Leading Span A), and Chikou Span (Lagging Span) of Ichimoku Kinko Hyo
  # @option opts [Integer] :high_period The number of observations, per period, to calculate Senkou Span B (Leading Span B) of Ichimoku Kinko Hyo
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityIchimokuKinkoHyo]
  describe 'get_security_price_technicals_ichimoku test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_kc
  # Keltner Channel
  # The Keltner Channel is a volatility based signal, with upper, middle, and lower bands. It is often used at market open, when the largest moves tend to occur. In general, traders tend to buy if the price breaks up above the upper band or sell short if the price drops below the lower band.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Kelter Channel
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityKeltnerChannel]
  describe 'get_security_price_technicals_kc test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_kst
  # Know Sure Thing
  # The Know Sure Thing indicator (KST) is a momentum based oscillator that is calculated by measuring the momentum of four separate price cycles. KST fluctuates above and below a zero line and is used to identify overbought and oversold conditions, and is often used with additional indicators to boost signal strength.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :roc1 The number of observations, per period, to calculate the rate-of-change for RCMA1
  # @option opts [Integer] :roc2 The number of observations, per period, to calculate the rate-of-change for RCMA2
  # @option opts [Integer] :roc3 The number of observations, per period, to calculate the rate-of-change for RCMA3
  # @option opts [Integer] :roc4 The number of observations, per period, to calculate the rate-of-change for RCMA4
  # @option opts [Integer] :sma1 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA1
  # @option opts [Integer] :sma2 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA2
  # @option opts [Integer] :sma3 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA3
  # @option opts [Integer] :sma4 The number of observations, per period, to calculate the Simple Moving Average of the rate-of-change for RCMA4
  # @option opts [String] :price_key The Stock Price field to use when calculating Know Sure Thing
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityKnowSureThing]
  describe 'get_security_price_technicals_kst test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_macd
  # Moving Average Convergence Divergence
  # Moving average convergence divergence (MACD) is a trend-following momentum oscillator that consists of three indicators: (1) a 12 period short-term exponential moving average (EMA) a 26 period long-term EMA and a 9 period EMA signal line. Traders using MACD often look for signal line crossovers, centerline crossovers, and EMA divergences to indicate the momentum and underlying trend of a security&#x60;s price.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :fast_period The number of observations, per period, to calculate the fast moving Exponential Moving Average for Moving Average Convergence Divergence
  # @option opts [Integer] :slow_period The number of observations, per period, to calculate the slow moving Exponential Moving Average for Moving Average Convergence Divergence
  # @option opts [Integer] :signal_period The number of observations, per period, to calculate the signal line for Moving Average Convergence Divergence
  # @option opts [String] :price_key The Stock Price field to use when calculating Moving Average Convergence Divergence
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityMovingAverageConvergenceDivergence]
  describe 'get_security_price_technicals_macd test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_mfi
  # Money Flow Index
  # The Money Flow Index (MFI) is a technical oscillator that incorporates both price and volume, moving between 0 and 100. Traders often consider a MFI above 80 as overbought conditions and below 20 as oversold conditions.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Money Flow Index
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityMoneyFlowIndex]
  describe 'get_security_price_technicals_mfi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_mi
  # Mass Index
  # The mass index (MI) is a technical indicator used by traders to predict trend reversals. A trend reversal signal is said to occur when the 25-day MI reaches 27.0 and then falls below 26.0.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :ema_period The number of observations, per period, to calculate the single Exponential Moving Average and the Double Exponential Moving Average for Mass Index
  # @option opts [Integer] :sum_period The number of observations, per period, to calculate the sum of the Exponetinal Moving Average Ratios for Mass Index
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityMassIndex]
  describe 'get_security_price_technicals_mi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_nvi
  # Negative Volume Index
  # The negative volume index (NVI) is often referred to as the &#x60;smart money indicator.&#x60; It works by the assumption that smart money (institutional money) is at work when volume decreases and vice versa when volume increases. NVI starts at 1000 and increases in regard to the percentage price change when volume decreases over a 255-day EMA period. Traders often use this technical indicator when researching broder markets and indices.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityNegativeVolumeIndex]
  describe 'get_security_price_technicals_nvi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_obv
  # On-balance Volume
  # On-balance volume (OBV) is a leading momentum indicator that uses the increase/decrease flow in volume to predict upcoming stock price changes. When both OBV and a security&#x60;s price are making higher highs, it is presumed the upward trend is likely to continue and vice versa.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityOnBalanceVolume]
  describe 'get_security_price_technicals_obv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_obv_mean
  # On-balance Volume Mean
  # On-balance volume mean (OBVM) is a leading momentum indicator that uses the increase/decrease flow in volume to predict upcoming stock price changes. The difference between OBV and OBVM is that OBVM takes the mean average of a provided period.  When both OBVM and a security&#x60;s price are making higher highs, it is presumed the upward trend is likely to continue and vice versa.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate On-balance Volume Mean
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityOnBalanceVolumeMean]
  describe 'get_security_price_technicals_obv_mean test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_rsi
  # Relative Strength Index
  # Relative strength index (RSI) is a momentum oscillator that ranges between 0 and 100. Traders believe that an RSI value over 70 indicates that a security is overbought and an RSI under 30 indicates that a security is oversold.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Relative Strength Index
  # @option opts [String] :price_key The Stock Price field to use when calculating Relative Strength Index
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityRelativeStrengthIndex]
  describe 'get_security_price_technicals_rsi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_sma
  # Simple Moving Average
  # A simple moving average (SMA) adds recent prices for a specified period and divides the total by that same number of periods. SMA is typically used to indicate whether a security is in an uptrend or downtrend and can also be combined with a long-term moving average to improve the signal&#x60;s abilities.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Simple Moving Average
  # @option opts [String] :price_key The Stock Price field to use when calculating Simple Moving Average
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecuritySimpleMovingAverage]
  describe 'get_security_price_technicals_sma test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_sr
  # Stochastic Oscillator
  # The Stochastic Oscillator (SO) is a range-bound momentum indicator that ranges from 0 to 100 and follows the velocity of the momentum itself, not the underlying price or volume. When SO is above 80 it indicates that a security is trading at the high end of its period&#x60;s high-low range and vice versa if the reading is below 20.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate %K of Stochastic Oscillator
  # @option opts [Integer] :signal_period The number of observations, per period, to calculate the %D (the Simple Moving Average of %K) as a signal line for Stochastic Oscillator
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityStochasticOscillator]
  describe 'get_security_price_technicals_sr test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_trix
  # Triple Exponential Average
  # The Triple Exponential Average (TEA) is a momentum indicator used to identify when a security is oversold and overbought. By exponentially smoothing out the underlying security&#x60;s moving average, the TEA  filters out insignificant price movements. A positive TEA is often believed to indicate momentum is increasing and a negative TEA indicates that momentum is decreasing.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Exponential Moving Average for Triple Exponential Average
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityTripleExponentialAverage]
  describe 'get_security_price_technicals_trix test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_tsi
  # True Strength Index
  # The True Strength Index (TSI) is a momentum oscillator used to identify building trends and trend reversals, typically by signalling overbought and oversold conditions. TSI fluctuates between positive and negative values, and traders typically combine its signal with other momentum oscillators to increase its strength. When TSI crosses the signal line into positive territory it is presumed to be an entrance opportunity and vice versa when the TSI crosses into negative territory.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :low_period The number of observations, per period, to calculate low period Exponential Moving Average for smoothing in True Strength Index
  # @option opts [Integer] :high_period The number of observations, per period, to calculate high period Exponential Moving Average for smoothing in True Strength Index
  # @option opts [String] :price_key The Stock Price field to use when calculating True Strength Index
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityTrueStrengthIndex]
  describe 'get_security_price_technicals_tsi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_uo
  # Ultimate Oscillator
  # The Ultimate Oscillator (UO) is a range bound technical indicator that moves between 0 and 100 and is calculated with 3 timeframes, typically 7, 14, and 28 day periods. When UO&#x60;s value is above 70 a security is categorized as overbought and when UO&#x60;s value is below 30 a security is categorized as oversold.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :short_period The number of observations, per period, to calculate the short period for Ultimate Oscillator
  # @option opts [Integer] :medium_period The number of observations, per period, to calculate the medium period for Ultimate Oscillator
  # @option opts [Integer] :long_period The number of observations, per period, to calculate the long period for Ultimate Oscillator
  # @option opts [Float] :short_weight The weight of short Buying Pressure average for Ultimate Oscillator
  # @option opts [Float] :medium_weight The weight of medium Buying Pressure average for Ultimate Oscillator
  # @option opts [Float] :long_weight The weight of long Buying Pressure average for Ultimate Oscillator
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityUltimateOscillator]
  describe 'get_security_price_technicals_uo test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_vi
  # Vortex Indicator
  # The Vortex Indicator (VI) is composed of an uptrend line (VI+) and a downtrend line (VI-). When VI+ crosses VI- from below it typically indicates an entry into a given security. When VI- crosses VI+ from below it typically triggers an exit and that the current trend is reversing course.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to calculate Vortex Indicator
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityVortexIndicator]
  describe 'get_security_price_technicals_vi test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_vpt
  # Volume-price Trend
  # The volume price trend (VPT) is a technical indicator that uses price &amp; volume to determine whether a trend is established. Typically, when a security is trending upwards, there is more volume on positive days than negative ones, and as a result VPT should be increasing on these days as well. However, if VPT fails to increase past its previous high during an outbreak, this is suggested to indicate the rally is losing strength.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityVolumePriceTrend]
  describe 'get_security_price_technicals_vpt test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_vwap
  # Volume Weighted Average Price
  # Volume Weighted Average Price (VWAP) is a lagging technical indicator that is used in combination with a security&#x60;s price. When the underlying price rises above its VWAP, it is often interpreted as a bullish signal, and vice versa in the opposite direction.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Integer] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityVolumeWeightedAveragePrice]
  describe 'get_security_price_technicals_vwap test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_security_price_technicals_wr
  # Williams %R
  # Williams %R is a momentum indicator used to determine overbought and oversold environments for a security and fluctuates between 0 and -100. When Williams %R is above -20 the security is considered to be overbought and when Williams %R is under -80 the security is considered to be oversold.
  # @param identifier A Security identifier (Ticker, FIGI, ISIN, CUSIP, Intrinio ID)
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period The number of observations, per period, to look-back when calculating Williams %R
  # @option opts [String] :start_date Return technical indicator values on or after the date
  # @option opts [String] :end_date Return technical indicator values on or before the date
  # @option opts [Float] :page_size The number of results to return
  # @option opts [String] :next_page Gets the next page of data from a previous API call
  # @return [ApiResponseSecurityWilliamsR]
  describe 'get_security_price_technicals_wr test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
